// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * retrieve kubeconfig from a talos cluster
 */
export function getKubeConfig(args: GetKubeConfigArgs, opts?: pulumi.InvokeOptions): Promise<GetKubeConfigResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("talos:index:getKubeConfig", {
        "endpoint": args.endpoint,
        "node": args.node,
        "talosConfig": args.talosConfig,
        "timeout": args.timeout,
    }, opts);
}

export interface GetKubeConfigArgs {
    /**
     * node endpoint address
     */
    endpoint: string;
    /**
     * node address
     */
    node: string;
    /**
     * talosconfig
     */
    talosConfig: string;
    /**
     * timeout in seconds (default 600)
     */
    timeout?: number;
}

export interface GetKubeConfigResult {
    /**
     * kubeconfig retrieved from the talos cluster
     */
    readonly kubeconfig: string;
}

export function getKubeConfigOutput(args: GetKubeConfigOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKubeConfigResult> {
    return pulumi.output(args).apply(a => getKubeConfig(a, opts))
}

export interface GetKubeConfigOutputArgs {
    /**
     * node endpoint address
     */
    endpoint: pulumi.Input<string>;
    /**
     * node address
     */
    node: pulumi.Input<string>;
    /**
     * talosconfig
     */
    talosConfig: pulumi.Input<string>;
    /**
     * timeout in seconds (default 600)
     */
    timeout?: pulumi.Input<number>;
}
