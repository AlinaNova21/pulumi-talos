// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package talos

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type TalosMachineConfigApplyMode string

const (
	// apply config with a reboot
	TalosMachineConfigApplyModeREBOOT = TalosMachineConfigApplyMode("REBOOT")
	// automatically try to apply and reboot if only required
	TalosMachineConfigApplyModeAUTO = TalosMachineConfigApplyMode("AUTO")
	// apply config without a reboot
	TalosMachineConfigApplyMode_NO_REBOOT = TalosMachineConfigApplyMode("NO_REBOOT")
	// apply config as staged
	TalosMachineConfigApplyModeSTAGED = TalosMachineConfigApplyMode("STAGED")
)

func (TalosMachineConfigApplyMode) ElementType() reflect.Type {
	return reflect.TypeOf((*TalosMachineConfigApplyMode)(nil)).Elem()
}

func (e TalosMachineConfigApplyMode) ToTalosMachineConfigApplyModeOutput() TalosMachineConfigApplyModeOutput {
	return pulumi.ToOutput(e).(TalosMachineConfigApplyModeOutput)
}

func (e TalosMachineConfigApplyMode) ToTalosMachineConfigApplyModeOutputWithContext(ctx context.Context) TalosMachineConfigApplyModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TalosMachineConfigApplyModeOutput)
}

func (e TalosMachineConfigApplyMode) ToTalosMachineConfigApplyModePtrOutput() TalosMachineConfigApplyModePtrOutput {
	return e.ToTalosMachineConfigApplyModePtrOutputWithContext(context.Background())
}

func (e TalosMachineConfigApplyMode) ToTalosMachineConfigApplyModePtrOutputWithContext(ctx context.Context) TalosMachineConfigApplyModePtrOutput {
	return TalosMachineConfigApplyMode(e).ToTalosMachineConfigApplyModeOutputWithContext(ctx).ToTalosMachineConfigApplyModePtrOutputWithContext(ctx)
}

func (e TalosMachineConfigApplyMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TalosMachineConfigApplyMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TalosMachineConfigApplyMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TalosMachineConfigApplyMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TalosMachineConfigApplyModeOutput struct{ *pulumi.OutputState }

func (TalosMachineConfigApplyModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TalosMachineConfigApplyMode)(nil)).Elem()
}

func (o TalosMachineConfigApplyModeOutput) ToTalosMachineConfigApplyModeOutput() TalosMachineConfigApplyModeOutput {
	return o
}

func (o TalosMachineConfigApplyModeOutput) ToTalosMachineConfigApplyModeOutputWithContext(ctx context.Context) TalosMachineConfigApplyModeOutput {
	return o
}

func (o TalosMachineConfigApplyModeOutput) ToTalosMachineConfigApplyModePtrOutput() TalosMachineConfigApplyModePtrOutput {
	return o.ToTalosMachineConfigApplyModePtrOutputWithContext(context.Background())
}

func (o TalosMachineConfigApplyModeOutput) ToTalosMachineConfigApplyModePtrOutputWithContext(ctx context.Context) TalosMachineConfigApplyModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TalosMachineConfigApplyMode) *TalosMachineConfigApplyMode {
		return &v
	}).(TalosMachineConfigApplyModePtrOutput)
}

func (o TalosMachineConfigApplyModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TalosMachineConfigApplyModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TalosMachineConfigApplyMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TalosMachineConfigApplyModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TalosMachineConfigApplyModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TalosMachineConfigApplyMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TalosMachineConfigApplyModePtrOutput struct{ *pulumi.OutputState }

func (TalosMachineConfigApplyModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TalosMachineConfigApplyMode)(nil)).Elem()
}

func (o TalosMachineConfigApplyModePtrOutput) ToTalosMachineConfigApplyModePtrOutput() TalosMachineConfigApplyModePtrOutput {
	return o
}

func (o TalosMachineConfigApplyModePtrOutput) ToTalosMachineConfigApplyModePtrOutputWithContext(ctx context.Context) TalosMachineConfigApplyModePtrOutput {
	return o
}

func (o TalosMachineConfigApplyModePtrOutput) Elem() TalosMachineConfigApplyModeOutput {
	return o.ApplyT(func(v *TalosMachineConfigApplyMode) TalosMachineConfigApplyMode {
		if v != nil {
			return *v
		}
		var ret TalosMachineConfigApplyMode
		return ret
	}).(TalosMachineConfigApplyModeOutput)
}

func (o TalosMachineConfigApplyModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TalosMachineConfigApplyModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TalosMachineConfigApplyMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TalosMachineConfigApplyModeInput is an input type that accepts TalosMachineConfigApplyModeArgs and TalosMachineConfigApplyModeOutput values.
// You can construct a concrete instance of `TalosMachineConfigApplyModeInput` via:
//
//          TalosMachineConfigApplyModeArgs{...}
type TalosMachineConfigApplyModeInput interface {
	pulumi.Input

	ToTalosMachineConfigApplyModeOutput() TalosMachineConfigApplyModeOutput
	ToTalosMachineConfigApplyModeOutputWithContext(context.Context) TalosMachineConfigApplyModeOutput
}

var talosMachineConfigApplyModePtrType = reflect.TypeOf((**TalosMachineConfigApplyMode)(nil)).Elem()

type TalosMachineConfigApplyModePtrInput interface {
	pulumi.Input

	ToTalosMachineConfigApplyModePtrOutput() TalosMachineConfigApplyModePtrOutput
	ToTalosMachineConfigApplyModePtrOutputWithContext(context.Context) TalosMachineConfigApplyModePtrOutput
}

type talosMachineConfigApplyModePtr string

func TalosMachineConfigApplyModePtr(v string) TalosMachineConfigApplyModePtrInput {
	return (*talosMachineConfigApplyModePtr)(&v)
}

func (*talosMachineConfigApplyModePtr) ElementType() reflect.Type {
	return talosMachineConfigApplyModePtrType
}

func (in *talosMachineConfigApplyModePtr) ToTalosMachineConfigApplyModePtrOutput() TalosMachineConfigApplyModePtrOutput {
	return pulumi.ToOutput(in).(TalosMachineConfigApplyModePtrOutput)
}

func (in *talosMachineConfigApplyModePtr) ToTalosMachineConfigApplyModePtrOutputWithContext(ctx context.Context) TalosMachineConfigApplyModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TalosMachineConfigApplyModePtrOutput)
}

type TalosMachineConfigVersion string

const (
	// Talos Machine Configuration Version
	TalosMachineConfigVersionV1alpha1 = TalosMachineConfigVersion("v1alpha1")
)

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TalosMachineConfigApplyModeInput)(nil)).Elem(), TalosMachineConfigApplyMode("REBOOT"))
	pulumi.RegisterInputType(reflect.TypeOf((*TalosMachineConfigApplyModePtrInput)(nil)).Elem(), TalosMachineConfigApplyMode("REBOOT"))
	pulumi.RegisterOutputType(TalosMachineConfigApplyModeOutput{})
	pulumi.RegisterOutputType(TalosMachineConfigApplyModePtrOutput{})
}
